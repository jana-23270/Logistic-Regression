# -*- coding: utf-8 -*-
"""Diabetes disease classification using LogisticRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xr3-XRCiZT5Jfz43D6jRpuvXkGXmkS6W
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/diabetes.csv')

df.head(10)

df.tail(10)

df.shape

df.info()

df.describe()

a=df['Age']
plt.plot(a)

b=df['BloodPressure']
c=df['Age']
plt.scatter(b,c)

d=df['Age']
plt.hist(d)

e=df['BloodPressure']
plt.bar(e,width=100,height=100)

o=df['BloodPressure']
plt.pie(o)

A=df['DiabetesPedigreeFunction']
B=df['Insulin']
sns.lineplot(x=A,y=B,data=df)

C=df['Age']
D=df['Glucose']
sns.scatterplot(x=C,y=D,data=df)

E=df['DiabetesPedigreeFunction']
F=df['Pregnancies']
sns.barplot(x=E,y=F,data=df)

sns.countplot(x='Age',data=df)

sns.pairplot(df,hue='Insulin')

q=[2,5,56,543]
w=[23,45,56,678]
sns.distplot(q,w)

df.isnull().sum()

s=df['Pregnancies']
sns.boxplot(s)

x=df.drop('Outcome',axis=1)
x

y=df['Outcome']
y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=0)

x_train.shape

x_test.shape

from sklearn.preprocessing import StandardScaler

std=StandardScaler()

a=std.fit_transform(x_train)
a

from sklearn.linear_model import LogisticRegression

clf=LogisticRegression()

clf.fit(x_train,y_train)

pred=clf.predict(x_test)

from sklearn.metrics import accuracy_score

accuracy_score(pred,y_test)

from sklearn.metrics import confusion_matrix

confusion_matrix(pred,y_test)